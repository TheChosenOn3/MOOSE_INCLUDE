version: 0.0.1.{build}
shallow_clone: false
skip_branch_with_pr: false
skip_commits:
  message: /!nobuild/
skip_tags: false

environment:
  access_token_documentation:
    secure: JVBVVL8uJUcLXN+48eRdELEeCGOGCCaMzCqutsUqNuaZ/KblG5ZTt7+LV4UKv/0f

platform:
  - x64

init:
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }
#  - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

install:
# Outcomment if lua environment invalidates and needs to be reinstalled, otherwise all will run from the cache.
#  - call choco install 7zip.commandline
#  - call choco install lua51
#  - call choco install luarocks
#  - call refreshenv
#  - call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat"
  - cmd: PATH = %PATH%;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\bin
  - cmd: set LUA_PATH = %LUA_PATH%;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\share\lua\5.1\?.lua;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\share\lua\5.1\?\init.lua
  - cmd: set LUA_CPATH = %LUA_CPATH%;C:\ProgramData\chocolatey\lib\luarocks\luarocks-2.4.3-win32\systree\lib\lua\5.1\?.dll 
#  - call luarocks install luasrcdiet


cache:
  - C:\ProgramData\chocolatey\lib
  - C:\ProgramData\chocolatey\bin


build_script:
   - ps: | 
       if( $env:appveyor_repo_branch -eq 'master' )     
       {
         git clone -q --depth=1 https://github.com/FlightControl-Master/MOOSE.git c:\Projects\Moose
         md Moose_Include_Static
         md Moose_Include_Dynamic
         lua5.1 "c:\\Projects\\Moose\\Moose Setup\\Moose_Create.lua" "S" %APPVEYOR_REPO_COMMIT% "c:\\Projects\\Moose\\Moose Development\\Moose" "Moose Setup" "Moose_Include_Static" 
         lua5.1 "c:\\Projects\\Moose\\Moose Setup\\Moose_Create.lua" "D" %APPVEYOR_REPO_COMMIT% "c:\\Projects\\Moose\\Moose Development\\Moose" "Moose Setup" "Moose_Include_Dynamic"
         luasrcdiet --basic --opt-emptylines "Moose_Include_Static\Moose.lua"
         dir -Recurse
         echo "Commit the Moose.lua include files to the MOOSE_INCLUDE repository"
         git config --global credential.helper store  
         Add-Content "$env:USERPROFILE\.git-credentials" "https://$($env:access_token_documentation):x-oauth-basic@github.com`n" 
         git config --global user.email "sven.van.de.velde@telenet.be" 
         git config --global user.name "FlightControl-User" 
         git add .
         git commit -m "Commit ID $env:APPVEYOR_REPO_COMMIT [skip ci]" 2>&1 
         git push origin master 2>&1
         dir
       }
   - ps: | 
       if( $env:appveyor_repo_branch -eq 'master' )     
       {
         $apiUrl = 'https://ci.appveyor.com/api'
         $token = 'qts80b5kpq0ooj4x6vvw'
         $headers = @{
           "Authorization" = "Bearer $token"
           "Content-type" = "application/json"
           }
         $RequestBody = @{ accountName = 'FlightControl-Master'; projectSlug = 'moose-missions'; branch = 'master'; environmentVariables = @{} } | ConvertTo-Json
         # get project with last build details
         $project = Invoke-RestMethod -method Post -Uri "$apiUrl/builds" -Headers $headers -Body $RequestBody
       }
   - ps: | 
       if( $env:appveyor_repo_branch -eq 'master' )     
       {
         $apiUrl = 'https://ci.appveyor.com/api'
         $token = 'qts80b5kpq0ooj4x6vvw'
         $headers = @{
           "Authorization" = "Bearer $token"
           "Content-type" = "application/json"
           }
         $RequestBody = @{ accountName = 'FlightControl-Master'; projectSlug = 'moose-missions-dynamic'; branch = 'master'; environmentVariables = @{} } | ConvertTo-Json
         # get project with last build details
         $project = Invoke-RestMethod -method Post -Uri "$apiUrl/builds" -Headers $headers -Body $RequestBody
       }


artifacts:
  - path: 'Moose_Include_Static\*.lua'
    name: Static
  - path: 'Moose_Include_Dynamic\*.lua'
    name: Dynamic

on_finish:
#  - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
